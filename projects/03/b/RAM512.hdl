// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel[0]=address[6], sel[1]=address[7], sel[2]=address[8], a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7);
    RAM64(in=in, load=reg0, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out0);
    RAM64(in=in, load=reg1, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out1);
    RAM64(in=in, load=reg2, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out2);
    RAM64(in=in, load=reg3, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out3);
    RAM64(in=in, load=reg4, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out4);
    RAM64(in=in, load=reg5, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out5);
    RAM64(in=in, load=reg6, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out6);
    RAM64(in=in, load=reg7, address[0]=address[0], address[1]=address[1], address[2]=address[2], address[3]=address[3], address[4]=address[5], address[5]=address[5], out=out7);
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel[0]=address[6], sel[1]=address[7], sel[2]=address[8], out=out);
}