// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

    // Sel == 000
    And(a=notsel2, b=notsel1, out=Notsel2AndNotsel1);
    And(a=Notsel2AndNotsel1, b=notsel0, out=sela);
    And(a=sela, b=in, out=a);

    // Sel == 001
    And(a=Notsel2AndNotsel1, b=sel[0], out=selb);
    And(a=selb, b=in, out=b);

    // Sel == 010
    And(a=notsel2, b=notsel0, out=Notsel2AndNotsel0);
    And(a=Notsel2AndNotsel0, b=sel[1], out=selc);
    And(a=selc, b=in, out=c);

    // Sel == 011
    And(a=sel[1], b=sel[0], out=sel1Andsel0);
    And(a=notsel2, b=sel1Andsel0, out=seld);
    And(a=seld, b=in, out=d);

    // Sel == 100
    And(a=notsel1, b=notsel0, out=Notsel1AndNotsel0);
    And(a=Notsel1AndNotsel0, b=sel[2], out=sele);
    And(a=sele, b=in, out=e);

    // Sel == 101
    And(a=sel[2], b=notsel1, out=sel2AndNotsel1);
    And(a=sel2AndNotsel1, b=sel[0], out=self);
    And(a=self, b=in, out=f);

    // Sel == 110
    And(a=sel[2], b=sel[1], out=sel2Andsel1);
    And(a=sel2Andsel1, b=notsel0, out=selg);
    And(a=selg, b=in, out=g);

    // Sel == 111
    And(a=sel[2], b=sel1Andsel0, out=selh);
    And(a=selh, b=in, out=h);
}